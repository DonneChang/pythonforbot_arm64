name: Build and Push Docker Image

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      python_version:
        description: "Python version to use (e.g. 3.11, 3.12, 3.13); leave empty to use python:latest"
        required: false
        default: ""

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set tag and version
        id: vars
        run: |
          if [ -z "${{ github.event.inputs.python_version }}" ]; then
            echo "Using default python:latest"
            echo "PYTHON_VERSION=latest" >> $GITHUB_OUTPUT
            echo "TAG_NAME=latest" >> $GITHUB_OUTPUT
          else
            echo "Using specified python version: ${{ github.event.inputs.python_version }}"
            echo "PYTHON_VERSION=${{ github.event.inputs.python_version }}" >> $GITHUB_OUTPUT
            echo "TAG_NAME=${{ github.event.inputs.python_version }}" >> $GITHUB_OUTPUT
          fi

      - name: Build Docker image for ARM64
        run: |
          docker build \
            --platform linux/arm64 \
            --build-arg PYTHON_VERSION=${{ steps.vars.outputs.PYTHON_VERSION }} \
            -t ${{ secrets.DOCKER_USERNAME }}/python-for-bot:${{ steps.vars.outputs.TAG_NAME }} .

      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/python-for-bot:${{ steps.vars.outputs.TAG_NAME }}
